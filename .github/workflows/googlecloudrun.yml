name: Deploy the dashboard API to Google Cloud Run

on:
  push:
    branches:
      - '**'


jobs:
  deploy:
    name: Deploy job
    runs-on: ubuntu-latest

    steps:

      # parse branch name from github.ref  
      # we will use this for GCLOUD_APP_NAME
      - uses: jungwinter/split@v1
        id: split
        with:
          msg: ${{ github.ref }}
          seperator: '/'

      - name: Checkout the repository
        uses: actions/checkout@v1

      - name: Build Docker image
        # workaround for no global env vars
        env: 
          GCLOUD_APP_NAME: ${{ steps.split.outputs._2 }} 

        run: |
          docker build . -t gcr.io/${{ secrets.GCLOUD_PROJECT }}/${{ env.GCLOUD_APP_NAME }}

      - name: Authenticate into Google Cloud Platform
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_email: ${{ secrets.GCLOUD_EMAIL }}
          service_account_key: ${{ secrets.GCLOUD_AUTH }}

      - name: Configure Docker to use Google Cloud Platform
        run: "gcloud auth configure-docker --quiet"

      - name: Push image to Google Cloud Container Registry
        # workaround for no global env vars
        env: 
          GCLOUD_APP_NAME: ${{ steps.split.outputs._2 }} 
        run: docker push gcr.io/${{ secrets.GCLOUD_PROJECT }}/${{ env.GCLOUD_APP_NAME }}

      - name: Deploy on cloud run
        # workaround for no global env vars
        env: 
          GCLOUD_APP_NAME: ${{ steps.split.outputs._2 }} 
        run: |
          gcloud config set project ${{ secrets.GCLOUD_PROJECT }}
          gcloud run deploy ${{ env.GCLOUD_APP_NAME }} --image gcr.io/${{ secrets.GCLOUD_PROJECT }}/${{ env.GCLOUD_APP_NAME }} --project ${{ secrets.GCLOUD_PROJECT }} --region us-west1 --platform managed --allow-unauthenticated 
          gcloud run services update ${{ env.GCLOUD_APP_NAME }} --region us-west1 --add-cloudsql-instances ${{ secrets.CLOUD_SQL_CONNECTION_NAME }} --set-env-vars CLOUD_SQL_CONNECTION_NAME=${{ secrets.CLOUD_SQL_CONNECTION_NAME }},CLOUD_SQL_USERNAME=${{ secrets.CLOUD_SQL_USERNAME }},CLOUD_SQL_PASSWORD=${{ secrets.CLOUD_SQL_PASSWORD }},CLOUD_SQL_DATABASE_NAME=${{ secrets.CLOUD_SQL_DATABASE_NAME }} --platform managed
